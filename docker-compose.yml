version: '3.8'

services:
  # FixFlow Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://fixflow:fixflow_password@db:5432/fixflow
      - NEXTAUTH_URL=http://localhost:3000
      - ENCRYPTION_KEY=your-secret-key-here
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - fixflow-network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: fixflow
      POSTGRES_USER: fixflow
      POSTGRES_PASSWORD: fixflow_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fixflow -d fixflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - fixflow-network

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - fixflow-network

volumes:
  postgres_data:
  redis_data:

networks:
  fixflow-network:
    driver: bridge 